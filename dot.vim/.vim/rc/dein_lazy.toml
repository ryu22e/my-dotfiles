[[plugins]]
repo = 'vim-scripts/smartchr'
on_i = 1
hook_add = '''
  autocmd FileType coffee,c,cpp,ruby,perl,python,php,javascript inoremap <buffer> <expr> = smartchr#loop(' = ', '=', ' == ')
  autocmd FileType php,javascript,typescript inoremap <buffer> <expr> = smartchr#loop(' = ', '=', ' == ', ' === ')
  autocmd FileType coffee,c,cpp,ruby,perl,python,php,javascript,typescript inoremap <expr> : smartchr#loop(':', ': ', '=>')
  autocmd FileType coffee,c,cpp,ruby,perl,python,php,javascript,typescript inoremap <expr> , smartchr#loop(', ', ',')
  autocmd FileType ctp inoremap <buffer> <expr> = smartchr#loop('=', ' = ', ' == ', ' === ')
  autocmd FileType ctp inoremap <expr> : smartchr#loop(':', ': ', '=>')
  autocmd FileType ctp inoremap <expr> , smartchr#loop(', ', ',')
  autocmd FileType c,cpp inoremap <buffer> <expr> . smartchr#loop('.', '->', '...')
  autocmd FileType php inoremap <buffer> <expr> . smartchr#loop('.', '->')
'''

[[plugins]]
repo = 'Shougo/ddc.vim'
if = '''executable('deno')'''
on_event = 'InsertEnter'
depends = ['denops.vim']
hook_source = '''
  " Use around source.
  call ddc#custom#patch_global('sources', ['around', 'nvim-lsp'])

  " Change source options
  call ddc#custom#patch_global('sourceOptions', {
        \ 'around': {'mark': 'A'},
        \ 'nvim-lsp': {
        \   'mark': 'lsp',
        \   'forceCompletionPattern': '\.\w*|:\w*|->\w*',
        \ },
        \ '_': {
        \   'matchers': ['matcher_head'],
        \   'sorters': ['sorter_rank'],
        \ },
        \ })
  call ddc#custom#patch_global('sourceParams', {
        \ 'around': {'maxSize': 500},
        \ 'nvim-lsp': { 'kindLabels': { 'Class': 'c' } },
        \ })

  " Mappings

  " <TAB>: completion.
  inoremap <silent><expr> <TAB>
  \ ddc#map#pum_visible() ? '<C-n>' :
  \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
  \ '<TAB>' : ddc#map#manual_complete()

  " <S-TAB>: completion back.
  inoremap <expr><S-TAB>  ddc#map#pum_visible() ? '<C-p>' : '<C-h>'

  call ddc#enable()
'''

[[plugins]]
repo = 'vim-denops/denops.vim'
if = '''executable('deno')'''

[[plugins]]
repo = 'Shougo/ddc-around'
if = '''executable('deno')'''
on_source = ['Shougo/ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
if = '''executable('deno')'''
on_source = ['Shougo/ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
if = '''executable('deno')'''
on_source = ['Shougo/ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
if = '''executable('deno')'''
on_source = ['Shougo/ddc.vim']

[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = 'BufEnter'
hook_source= '''
lua << EOF
local lsp_installer = require("nvim-lsp-installer")
lsp_installer.on_server_ready(function(server)
  local opts = {}
  server:setup(opts)
end)
EOF
'''

[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
on_source = 'nvim-lspconfig'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'htmldjango', 'smarty']

[[plugins]]
repo = 'osyo-manga/vim-over'
on_cmd = ['OverCommandLine']

[[plugins]]
repo = 'gu-fan/riv.vim'
on_ft = ['rst']

[[plugins]]
repo = 'tell-k/vim-autopep8'
if = '''executable('autopep8')'''
on_ft = ['python']
on_cmd = ['Autopep8']
hook_add = '''
  let g:autopep8_disable_show_diff = 1
'''

[[plugins]]
repo = 'vim-scripts/django.vim'
on_ft = ['python']

[[plugins]]
repo = 'jmcomets/vim-pony'
on_ft = ['python', 'htmldjango']
on_cmd = ['Dadmin', 'Dmodels', 'Dsettings', 'Dtests', 'Durls', 'Dviews', 'Drunserver', 'Dr', 'Dsyncdb', 'Dsy', 'Dshell', 'Dsh', 'Ddbshell']

[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = ['scala']

[[plugins]]
repo = 'arp242/gopher.vim'
on_ft = ['go', 'gohtmltmpl']
hook_add = '''
'''

[[plugins]]
repo = 'jmcantrell/vim-virtualenv'
on_ft = ['python']
if = '''executable('virtualenv')'''

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'chase/vim-ansible-yaml'
on_ft = ['ansible']

[[plugins]]
repo = 'elixir-lang/vim-elixir'
on_ft = ['elixir']

[[plugins]]
repo = 'Glench/Vim-Jinja2-Syntax'
on_ft = ['jinja']

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
if = '''has('python')'''

[[plugins]]
repo = 'mileszs/ack.vim'
if = '''executable('ack')'''
on_cmd = ['Ack', 'AckAdd', 'AckFromSearch', 'LAck', 'LAckAdd', 'AckFile', 'AckHelp', 'AckWindow', 'LAckWindow']

[[plugins]]
repo = 'stephpy/vim-php-cs-fixer'
on_ft = ['php']
if = '''executable('php-cs-fixer')'''
hook_add = '''
    auto BufWritePre *.php call PhpCsFixerFixFile()
'''

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']
if = '''executable('tsc')'''

[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = ['terraform']
hook_add = '''
  let g:terraform_fmt_on_save = 1
'''

[[plugins]]
repo = 'juliosueiras/vim-terraform-completion'
on_ft = ['terraform']

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rust']
hook_add = '''
  let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']
hook_add = '''
  autocmd BufRead,BufNewFile *.vue setlocal filetype=vue
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
on_cmd = ['IndentGuidesEnable', 'IndentGuidesDisable', 'IndentGuidesToggle']
